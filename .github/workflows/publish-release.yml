name: Publish-Release

on:
  workflow_call:
    secrets:
      ACTIONS_READ_ACCESS_TOKEN:
        required: true

env:
  REPOSITORY_NAME: ${{ github.event.repository.name }}
  PROJECT_NAME: 'openponk-${{ github.event.repository.name }}'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VERSION: ${{ github.event.release.tag_name }}
  RUN_ID: ${{ github.run_id }}
  PHARO_VERSION: 12
  
jobs:
  build-win:
    runs-on: windows-latest
    env:
      PLATFORM: win
    name: 'Build Windows and upload zip'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0
      - name: Prepare scripts directory
        run: md ci-scripts
      - name: Checkout scripts
        uses: actions/checkout@v4.1.0
        with:
          repository: OpenPonk/ci-scripts
          path: ci-scripts
      - name: Load SmalltalkCI environment
        uses: hpi-swa/setup-smalltalkCI@1.3.4
        id: smalltalkci
        with:
          smalltalk-image: Pharo64-${{ env.PHARO_VERSION }}
      - name: Prepare image and test
        run: smalltalkci -s ${{ steps.smalltalkci.outputs.smalltalk-image }}
        shell: bash
        timeout-minutes: 20
      - name: Create zip
        run: ci-scripts/.github/scripts/build-win.ps1
        env: 
          ACTIONS_READ_ACCESS_TOKEN: ${{ secrets.ACTIONS_READ_ACCESS_TOKEN }}
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
      - name: Upload zip
        id: upload-zip
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./${{ env.PROJECT_NAME }}-${{ env.PLATFORM }}-${{ env.VERSION }}.zip
          asset_name: ${{ env.PROJECT_NAME }}-${{ env.PLATFORM }}-${{ env.VERSION }}.zip
          asset_content_type: application/zip

  build-linux:
    runs-on: ubuntu-latest
    env:
      PLATFORM: linux
    name: 'Build Linux and upload zip'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0
      - name: Prepare scripts directory
        run: mkdir ci-scripts
      - name: Checkout scripts
        uses: actions/checkout@v4.1.0
        with:
          repository: OpenPonk/ci-scripts
          path: ci-scripts
      - name: Load SmalltalkCI environment
        uses: hpi-swa/setup-smalltalkCI@1.3.4
        id: smalltalkci
        with:
          smalltalk-image: Pharo64-${{ env.PHARO_VERSION }}
      - name: Prepare image and test
        run: smalltalkci -s ${{ steps.smalltalkci.outputs.smalltalk-image }}
        shell: bash
        timeout-minutes: 12
      - name: Prepare zip script
        run: chmod u+x ci-scripts/.github/scripts/build-linux.sh
      - name: Create zip
        run: ci-scripts/.github/scripts/build-linux.sh
        env: 
          ACTIONS_READ_ACCESS_TOKEN: ${{ secrets.ACTIONS_READ_ACCESS_TOKEN }}
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
      - name: Upload zip
        id: upload-zip
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./${{ env.PROJECT_NAME }}-${{ env.PLATFORM }}-${{ env.VERSION }}.zip
          asset_name: ${{ env.PROJECT_NAME }}-${{ env.PLATFORM }}-${{ env.VERSION }}.zip
          asset_content_type: application/zip

  build-mac-intel:
    runs-on: macos-13
    env:
      PLATFORM: mac-intel
    name: 'Build Mac Intel and upload zip'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0
      - name: Prepare scripts directory
        run: mkdir ci-scripts
      - name: Checkout scripts
        uses: actions/checkout@v4.1.0
        with:
          repository: OpenPonk/ci-scripts
          path: ci-scripts
      - name: Load SmalltalkCI environment
        uses: hpi-swa/setup-smalltalkCI@1.3.4
        id: smalltalkci
        with:
          smalltalk-image: Pharo64-${{ env.PHARO_VERSION }}
      - name: Prepare image and test
        run: smalltalkci -s ${{ steps.smalltalkci.outputs.smalltalk-image }}
        shell: bash
        timeout-minutes: 12
      - name: Prepare zip script
        run: chmod u+x ci-scripts/.github/scripts/build-mac.sh
      - name: Create zips
        run: ci-scripts/.github/scripts/build-mac.sh
        env: 
          ACTIONS_READ_ACCESS_TOKEN: ${{ secrets.ACTIONS_READ_ACCESS_TOKEN }}
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
      - name: Upload zip
        id: upload-zip
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./${{ env.PROJECT_NAME }}-${{ env.PLATFORM }}-${{ env.VERSION }}.zip
          asset_name: ${{ env.PROJECT_NAME }}-${{ env.PLATFORM }}-${{ env.VERSION }}.zip
          asset_content_type: application/zip

  build-mac-m1:
    runs-on: macos-14
    env:
      PLATFORM: mac-m1
    name: 'Build Mac M1 and upload zip'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0
      - name: Prepare scripts directory
        run: mkdir ci-scripts
      - name: Checkout scripts
        uses: actions/checkout@v4.1.0
        with:
          repository: OpenPonk/ci-scripts
          path: ci-scripts
      - name: Load SmalltalkCI environment
        uses: hpi-swa/setup-smalltalkCI@1.3.4
        id: smalltalkci
        with:
          smalltalk-image: Pharo64-${{ env.PHARO_VERSION }}
      - name: Prepare image and test
        run: smalltalkci -s ${{ steps.smalltalkci.outputs.smalltalk-image }}
        shell: bash
        timeout-minutes: 12
      - name: Prepare zip script
        run: chmod u+x ci-scripts/.github/scripts/build-mac.sh
      - name: Create zips
        run: ci-scripts/.github/scripts/build-mac.sh
        env: 
          ACTIONS_READ_ACCESS_TOKEN: ${{ secrets.ACTIONS_READ_ACCESS_TOKEN }}
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
      - name: Upload Intel zip
        id: upload-zip
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./${{ env.PROJECT_NAME }}-${{ env.PLATFORM }}-${{ env.VERSION }}.zip
          asset_name: ${{ env.PROJECT_NAME }}-${{ env.PLATFORM }}-${{ env.VERSION }}.zip
          asset_content_type: application/zip
